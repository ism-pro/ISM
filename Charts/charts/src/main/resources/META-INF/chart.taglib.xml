<?xml version="1.0" encoding="utf-8"?>
<facelet-taglib xmlns="http://java.sun.com/xml/ns/javaee"
                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-facelettaglibrary_2_0.xsd"
                version="2.0">
              
    <namespace>http://www.ism.org/charts</namespace>

    <!-- Component Tags -->
    <!-- =======================================================================
    // =========================================================================
    // =========================================================================
    // =========================================================================
    // =========================================================================
    // ===================================================================== -->
        
    <tag>
        <description><![CDATA[<p>
            Main entry point of ribbon component. InputDate is based on UIComponentBase
            Based on
            <a href="https://eonasdan.github.io/bootstrap-datetimepicker/">
            bootstrap-datetimepicker </a>
            </p>]]>
        </description>
        <tag-name>desk</tag-name>
        <component>
            <component-type>org.ism.component.Desk</component-type>
            <renderer-type>org.ism.component.DeskRenderer</renderer-type>
        </component>
        
        
        
        <attribute>
            <description>
                <![CDATA[
                <h3>Closable</h3>
                <p>
                Closable allow to define if the menu desk can be closed !
                </p>]]>
            </description>
            <name>closable</name>
            <type>java.lang.Boolean</type>
        </attribute>
        
        <attribute>
            <description>
                <![CDATA[
                <h3>Close Speed</h3>
                <p>
                Defined the speed on action close
                Default: 1000 ms
                </p>]]>
            </description>
            <name>closeSpeed</name>
            <type>java.lang.Integer</type>
        </attribute>

        <attribute>
            <description><![CDATA[Title label for closer element of closable panel.]]></description>
            <name>closeTitle</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        
        <attribute>
            <description>
                <![CDATA[
                <h3>collapsable</h3>
                <p>
                Closable allow to define if the menu desk can be collapse !
                </p>]]>
            </description>
            <name>collapsable</name>
            <type>java.lang.Boolean</type>
        </attribute>
        
        <attribute>
            <description><![CDATA[Renders a toggleable desk as collapsed. Default is false.]]></description>
            <name>collapsed</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        
        <attribute>
            <description>
                <![CDATA[
                <h3>Collapse Speed</h3>
                <p>
                Defined the speed on action collapse
                Default: 1000 ms
                </p>]]>
            </description>
            <name>collapseSpeed</name>
            <type>java.lang.Integer</type>
        </attribute>
               
        <attribute>
            <description><![CDATA[Title label for collapse element of collapse menu.]]></description>
            <name>collapseTitle</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        
        <attribute>
            <description>
                <![CDATA[
                <h3>Headered</h3>
                <p>
                Enable tite title bar panel which containt header title and
                collapser and closer button
                
                Default : true
                </p>]]>
            </description>
            <name>headered</name>
            <type>java.lang.Boolean</type>
        </attribute>
        
        <attribute>
            <description>
                <![CDATA[
                <h3>Icon</h3>
                    <p>
                    Correspond to icon class
                    Default : fa fa-navicon fa-2x
                    </p>
                ]]>
            </description>
            <name>icon</name>
            <type>java.lang.String</type>
        </attribute>
        
        <attribute>
            <description>
                <![CDATA[
                <h3>Menu</h3>
                <p>
                Menu refere and define the current defined menu
                </p>]]>
            </description>
            <name>menu</name>
            <type>java.lang.Integer</type>
        </attribute>
        
        <attribute>
            <description>
                <![CDATA[
                <h3>Navigator Titled</h3>
                <p>
                Enable the show or not of tooltip on navigator
                
                Default : true
                </p>]]>
            </description>
            <name>navigatorTitled</name>
            <type>java.lang.Boolean</type>
        </attribute>
        
        <attribute>
            <description>
                <![CDATA[
                <h3>Navigator Title</h3>
                    <p>
                    Text to bein desplay when tooltip is request on navigator
                    Default: Agrandir/RÃ©duire
                    </p>
                ]]>
            </description>
            <name>navigatorTitle</name>
            <type>java.lang.String</type>
        </attribute>
        
        <attribute>
            <description>
                <![CDATA[
                    <p>
                    Style allow to specifie code css to be apply to component.
                    </p>
                ]]>
            </description>
            <name>style</name>
            <type>java.lang.String</type>
        </attribute>
        
        <attribute>
            <description><![CDATA[<p>Style class of main component</p>]]></description>
            <name>styleClass</name>
            <type>java.lang.String</type>
        </attribute>
        
        <attribute>
            <description><![CDATA[<p>Style class of item component</p>]]></description>
            <name>itemStyleClass</name>
            <type>java.lang.String</type>
        </attribute>
        
        <attribute>
            <description><![CDATA[<p>Style class of item header component</p>]]>
            </description>
            <name>itemHeaderStyleClass</name>
            <type>java.lang.String</type>
        </attribute>
        
        <attribute>
            <description><![CDATA[<p>Style class of item content component</p>]]>
            </description>
            <name>itemContentStyleClass</name>
            <type>java.lang.String</type>
        </attribute>
        
        <attribute>
            <description><![CDATA[Makes panel toggleable. Default is false.]]></description>
            <name>toggleable</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        
        
        <attribute>
            <description><![CDATA[Title attribute for toggler element of toggleable panel.]]></description>
            <name>toggleTitle</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        
        <attribute>
            <description><![CDATA[Renders panel as hidden. Default is true.]]></description>
            <name>visible</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>

        <attribute>
            <description><![CDATA[Name of the client side widget.]]></description>
            <name>widgetVar</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        
        
        <!-- UIComponent Base -->
        <attribute>
            <description><![CDATA[Unique identifier of the component in a namingContainer.]]></description>
            <name>id</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        
        <attribute>
            <description><![CDATA[Boolean value to specify the rendering of the component, when set to false component will not be rendered.]]></description>
            <name>rendered</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        
        <attribute>
            <description><![CDATA[An el expression referring to a server side UIComponent instance in a backing bean.]]></description>
            <name>binding</name>
            <required>false</required>
            <type>javax.faces.component.UIComponent</type>
        </attribute>

    </tag>
    
    
    <!-- =======================================================================
    // =========================================================================
    // =========================================================================
    // =========================================================================
    // =========================================================================
    // ===================================================================== -->
    
    <tag>
        <tag-name>chart</tag-name>
        <component>
            <component-type>org.ism.component.Chart</component-type>
            <renderer-type>org.ism.component.ChartRenderer</renderer-type>
            <handler-class>org.ism.component.chart.ChartHandler</handler-class>
        </component>
        
        <description>
            <![CDATA[
            <h3>chart component</h3>
            <p>
            Define the chart markedup which allow to renderer a component chart. <br >
            The component chart can be define in two different ways : 
            <ul>
                <li>One is to specify each attributes
                <li>The other is to give the chart model attribute
            </ul>
            Note : When concurent attributes are define in specific attribute and
            in the chart model, the priority goes to the specific attribute.
            </p>
            <p>The component chart is entierly base Highchart which will process
            chart rendering based on similar classes.
            <a> http://api.highcharts.com/highcharts/ </a>
            ]]>
        </description>
        
        <!-- chart extend attributes -->
        <attribute>
            <description>
                <![CDATA[
                <p>Convenient attribute only useful while programming. It allow
                to printout renderer mecanisme for the component. It has not 
                effect on component while reducing processing time.
                ]]>
            </description>
            <name>debug</name>
            <type>boolean</type>
        </attribute>
        
        <attribute>
            <description>
                <![CDATA[
                <p>Convenient property which enable to specify if the component
                has to load is own jQuery library or not. Default value is flase
                this means it is not loaded.
                </p>
                ]]>
            </description>
            <name>enabledJQuery</name>
            <type>boolean</type>
        </attribute>
        
        <attribute>
            <description><![CDATA[]]></description>
            <name>exporting</name>
            <type>boolean</type>
        </attribute>
        
        <attribute>
            <description>
                <![CDATA[
                <p>Chart model attribute is based on a model definition which 
                will be responsible of chart datas. It allow to design easily 
                the chart in POJO and then renderer it definition.<br>
                Note : chart model has not priority to specific attribute : so
                carreful while using specify attribut in combination with model.
                ]]>
            </description>
            <name>model</name>
            <type>org.ism.charts.lib.model.ChartModel</type>
        </attribute>
        
        <attribute>
            <description>
                <![CDATA[
                <p>
                <p>Deprecated : no effect on the component </p>
                </p>
                ]]>
            </description>
            <name>responsive</name>
            <type>boolean</type>
        </attribute>
        
        <attribute>
            <description>
                <![CDATA[
                <p>Style property allow to directly insert css markeup to the 
                current component which will override existing one.
                </p>
                ]]>
            </description>
            <name>style</name>
            <type>java.lang.String</type>
        </attribute>
        
        <attribute>
            <description>
                <![CDATA[
                <p>styleClass property allow to append your own class to the 
                current component which will be associate to the existing one.
                </p>
                ]]>
            </description>
            <name>styleClass</name>
            <type>java.lang.String</type>
        </attribute>
        
        <attribute>
            <description>
                <![CDATA[
                <p>Type indicate which kind of chart as to be renderer. It is a
                specific attribute thus grant priority to the chart model. <br>
                Possible value for chart are actually :
                <ul>
                    <li>Line, 
                    <li>Pie,
                </ul>
                </p>
                ]]>
            </description>
            <name>type</name>
            <type>java.lang.String</type>
        </attribute>
        
        <attribute>
            <description>
                <![CDATA[Deprecated : not working]]>
            </description>
            <name>widgetVar</name>
            <type>java.lang.String</type>
        </attribute>
        
        <attribute>
            <description>
                <![CDATA[
                Zoom Type is one of x, y, xy which allow to perform zooming in 
                x, y or both direction.
                If not defined no zoom is applied
                ]]>
            </description>
            <name>zoomType</name>
            <type>java.lang.String</type>
        </attribute>
        

        <!-- chart UIComponentBase -->
        <attribute>
            <description>
                <![CDATA[
                Get a string which uniquely identifies this UIComponent within the 
                scope of the nearest ancestor NamingContainer component. The id is 
                not necessarily unique across all components in the current view.
                ]]>
            </description>
            <name>id</name>
            <type>java.lang.String</type>
        </attribute>
        
        <attribute>
            <description>
                <![CDATA[
                A boolean value that indicates whether this component should be 
                rendered. Default value: true.
                ]]>
            </description>
            <name>rendered</name>
            <type>boolean</type>
        </attribute>
        
        <attribute>
            <description>
                <![CDATA[
                Identifies a backing bean property (of type UIComponent or 
                appropriate subclass) to bind to this component instance. This 
                value must be an EL expression.
                ]]>
            </description>
            <name>binding</name>
            <type>javax.faces.component.UIComponent</type>
        </attribute>
        
    </tag>


    <!-- =======================================================================
    // =========================================================================
    // =========================================================================
    // =========================================================================
    // =========================================================================
    // ===================================================================== -->
    <tag>
        <tag-name>fake</tag-name>
        <description><![CDATA[Fake allow only to load resource in order to develop.]]></description>
        <component>
            <component-type>org.ism.component.Fake</component-type>
        </component>
        <attribute>
            <description><![CDATA[Unique identifier of the component in a namingContainer.]]></description>
            <name>id</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        
        <attribute>
            <description><![CDATA[Boolean value to specify the rendering of the component, when set to false component will not be rendered.]]></description>
            <name>rendered</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        
        <attribute>
            <description><![CDATA[An el expression referring to a server side UIComponent instance in a backing bean.]]></description>
            <name>binding</name>
            <required>false</required>
            <type>javax.faces.component.UIComponent</type>
        </attribute>
        <attribute>
            <description><![CDATA[An icon for the current tab.]]></description>
            <name>faIcon</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description><![CDATA[Title text of the tab.]]></description>
            <name>title</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description><![CDATA[Title container inner style.]]></description>
            <name>titleStyle</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description><![CDATA[Title container style class.]]></description>
            <name>titleStyleClass</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description><![CDATA[Disables tab element if true.]]></description>
            <name>disabled</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description><![CDATA[Makes the tab closable by displaying a close icon.]]></description>
            <name>closable</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description><![CDATA[Tooltip of the tab header.]]></description>
            <name>titletip</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description><![CDATA[]]></description>
            <name>ariaLabel</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
    </tag>
    
        
    <!-- =======================================================================
    // =========================================================================
    // =========================================================================
    // =========================================================================
    // =========================================================================
    // ===================================================================== -->
    
    <tag>
        <tag-name>inputCropper</tag-name>
        <description>
            <![CDATA[
                InputCropper allows to select a picture. Depend on setup picture
                can be load in memory to be as a blob image.<br>
                The useful of crop is that image can be edited and cropped in 
                diffÃ©rent way before being blob and return the blob link create.<br >
                InputCropper require "for" attribut that as to be lined to a input.
                Note : input will be laod inside the InputCropper html on ready DOM.
            ]]>
        </description>
        
        <component>
            <component-type>org.ism.component.InputCropper</component-type>
            <renderer-type>org.ism.component.InputCropperRenderer</renderer-type>
        </component>
        
        
        <attribute>
            <description><![CDATA[Alternate text of the image.]]></description>
            <name>alt</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        
        
        <attribute>
            <description>
                <![CDATA[
                    Label of the  apply button.
                    Default value is "Appliquer". Write null if does not want
                    a button apply.
                ]]>
            </description>
            <name>applyLabel</name>
            <type>java.lang.String</type>
        </attribute>
        
        
        <attribute>
            <description>
                <![CDATA[
                    Insert a title to the apply button.
                    Default value is "Valider le redimensionnement". 
                    Write null if does not want a title on apply button.
                ]]>
            </description>
            <name>applyTitle</name>
            <type>java.lang.String</type>
        </attribute>
        
        <attribute>
            <description>
                <![CDATA[
                    Define default aspect ratio which is one of : <br>
                    <ul><li>"cinema" : [16:9]</li><li>"photo" : [4:3]</li><li>"camera" : [1:1]</li><li>"avatar" : [2:3]</li><li>"free" : any</li></ul>
                ]]>
            </description>
            <name>aspectRatio</name>
            <type>java.lang.String</type>
        </attribute>
        
        <attribute>
            <description><![CDATA[An el expression referring to a server side UIComponent instance in a backing bean.]]></description>
            <name>binding</name>
            <required>false</required>
            <type>javax.faces.component.UIComponent</type>
        </attribute>
      
        
        <attribute>
            <description><![CDATA[Background color of the container.]]></description>
            <name>backgroundColor</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        
        <attribute>
            <description><![CDATA[Background opacity of the container. Default is 0.6]]></description>
            <name>backgroundOpacity</name>
            <required>false</required>
            <type>java.lang.Double</type>
        </attribute>
        
                
        <attribute>
            <description><![CDATA[Maximum box height of the cropping area.]]></description>
            <name>boxHeight</name>
            <required>false</required>
            <type>java.lang.Integer</type>
        </attribute>
        
        <attribute>
            <description><![CDATA[Maximum box width of the cropping area.]]></description>
            <name>boxWidth</name>
            <required>false</required>
            <type>java.lang.Integer</type>
        </attribute>

        
        <attribute>
            <description>
                <![CDATA[
                    Invit label to choose a picture in browser button.
                    Default value is "Charger". 
                ]]>
            </description>
            <name>chooseLabel</name>
            <type>java.lang.String</type>
        </attribute>
        

        <attribute>
            <description>
                <![CDATA[Display or not the close button on modal editor]]>
            </description>
            <name>closable</name>
            <type>java.lang.Boolean</type>
        </attribute>
        
        <attribute>
            <description>
                <![CDATA[Hearder of the title bar in the modal window. ]]>
            </description>
            <name>closeTitle</name>
            <type>java.lang.String</type>
        </attribute>
        
        <attribute>
            <description>
                <![CDATA[Define the dragging mode of the cropper :<br>
                        Default: 'crop' <br>
                        Options: <br>
                        <ul>
                        <li>'crop': create a new crop box<li>
                        <li>'move': move the canvas<li>
                        <li>'none': do nothing<li>
                        <ul>
                ]]>
            </description>
            <name>dragMode</name>
            <type>java.lang.String</type>
        </attribute>
        
        <attribute>
            <description>
                <![CDATA[
                    Attribute "for" refer to an input text id where the it should
                    present the result.
                ]]>
            </description>
            <name>for</name>
            <required>true</required>
            <type>java.lang.String</type>
        </attribute>
        
        
        
        <attribute>
            <description>
                <![CDATA[
                    Header represent the title of modal window.
                    Default value is "Title". 
                    Write null if does not want a title.
                ]]>
            </description>
            <name>header</name>
            <type>java.lang.String</type>
        </attribute>
        

        <attribute>
            <description><![CDATA[Unique identifier of the component in a namingContainer.]]></description>
            <name>id</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        
        <attribute>
            <description><![CDATA[Context relative path to the image]]></description>
            <name>image</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        
        
        <attribute>
            <description><![CDATA[Initial coordinates of the cropper area.]]></description>
            <name>initialCoords</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        
        <attribute>
            <description>
                <![CDATA[
                    Insert a title to input path image.
                    Default value is "Cliquer pour modifier". 
                    Write null if does not want a title on avatar image.
                ]]>
            </description>
            <name>inputTitle</name>
            <type>java.lang.String</type>
        </attribute>
        
        
        <attribute>
            <description>
                <![CDATA[
                    Loading gif allow to change the current loading waiting.
                    Default one exist
                ]]>
            </description>
            <name>loadingGif</name>
            <type>java.lang.String</type>
        </attribute>


        <attribute>
            <description><![CDATA[Minimum size of the cropper area.]]></description>
            <name>minSize</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        
        <attribute>
            <description><![CDATA[Maximum size of the cropper area.]]></description>
            <name>maxSize</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>


        <attribute>
            <description><![CDATA[Boolean value to specify the rendering of the component, when set to false component will not be rendered.]]></description>
            <name>rendered</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>

        <attribute>
            <description><![CDATA[Rotation of the image]]></description>
            <name>rotation</name>
            <required>false</required>
            <type>java.lang.Double</type>
        </attribute>

        <attribute>
            <description><![CDATA[Upload Url define the servlet which manage the uplaod content]]></description>
            <name>uploadUrl</name>
            <required>true</required>
            <type>java.lang.String</type>
        </attribute>

        <attribute>
            <description><![CDATA[Zoom of the picture in both direction x, y <br>
                NB : prior is to zoomX and zoomY. Default value 1]]></description>
            <name>zoom</name>
            <required>false</required>
            <type>java.lang.Double</type>
        </attribute>
        
        <attribute>
            <description><![CDATA[Zoom of the picture in X direction <br>
                NB : prior is on zoomX and not zoom. Default value 1]]></description>
            <name>zoomX</name>
            <required>false</required>
            <type>java.lang.Double</type>
        </attribute>
        
        <attribute>
            <description><![CDATA[Zoom of the picture in Y direction <br>
                NB : prior is on zoomY and not zoom. Default value 1]]></description>
            <name>zoomY</name>
            <required>false</required>
            <type>java.lang.Double</type>
        </attribute>
        
        


        <!-- FROM PARENT -->

        <attribute>
            <description><![CDATA[Value of the component.]]></description>
            <name>value</name>
            <required>false</required>
            <type>java.lang.Object</type>
        </attribute>
        
        <attribute>
            <description><![CDATA[An el expression or a literal text that defines a converter for the component. When it's an EL expression, it's resolved to a converter instance. 
    In case it's a static text, it must refer to a converter id.]]></description>
            <name>converter</name>
            <required>false</required>
            <type>java.faces.convert.Converter</type>
        </attribute>
        
        <attribute>
            <description><![CDATA[When set true, process validations logic is executed at apply request values phase for this component. Default is false.]]></description>
            <name>immediate</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        
        <attribute>
            <description><![CDATA[Marks component as required.]]></description>
            <name>required</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        
        <attribute>
            <description><![CDATA[A method expression referring to a method validationg the input.]]></description>
            <name>validator</name>
            <required>false</required>
            <type>javax.faces.validator.Validator</type>
        </attribute>
        
        <attribute>
            <description><![CDATA[A method binding expression referring to a method for handling a valuchangeevent.]]></description>
            <name>valueChangeListener</name>
            <required>false</required>
            <type>javax.faces.event.ValueChangeListener</type>
        </attribute>
        
        <attribute>
            <description><![CDATA[Message to display when required field validation fails.]]></description>
            <name>requiredMessage</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        
        <attribute>
            <description><![CDATA[Message to display when conversion fails.]]></description>
            <name>converterMessage</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        
        <attribute>
            <description><![CDATA[Message to display when validation fails.]]></description>
            <name>validatorMessage</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        
        <attribute>
            <description><![CDATA[Name of the client side widget.]]></description>
            <name>widgetVar</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>



        
    </tag>
    <!-- =======================================================================
    // =========================================================================
    // =========================================================================
    // =========================================================================
    // =========================================================================
    // ===================================================================== -->
    
    <tag>
        <tag-name>overlayPanel</tag-name>
        <description><![CDATA[OverlayPanel is a generic container component that is displayed as a popup.]]></description>
        <component>
            <component-type>org.ism.component.OverlayPanel</component-type>
            <renderer-type>org.ism.component.overlaypanel.OverlayPanelRenderer</renderer-type>
        </component>
        <attribute>
            <description><![CDATA[Unique identifier of the component in a namingContainer.]]></description>
            <name>id</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description><![CDATA[Boolean value to specify the rendering of the component, when set to false component will not be rendered.]]></description>
            <name>rendered</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description><![CDATA[An el expression referring to a server side UIComponent instance in a backing bean.]]></description>
            <name>binding</name>
            <required>false</required>
            <type>javax.faces.component.UIComponent</type>
        </attribute>
        <attribute>
            <description><![CDATA[Name of the client side widget.]]></description>
            <name>widgetVar</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description><![CDATA[Inline style of the component.]]></description>
            <name>style</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description><![CDATA[Style class of the component.]]></description>
            <name>styleClass</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description><![CDATA[Identifier of the target component to show the panel.]]></description>
            <name>for</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description><![CDATA[Event to show the overlay panel, default is "click".]]></description>
            <name>showEvent</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description><![CDATA[Event to hide the overlay panel, default is "click".]]></description>
            <name>hideEvent</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description><![CDATA[Effect to display when showing the panel.]]></description>
            <name>showEffect</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description><![CDATA[Effect to display when hiding the panel.]]></description>
            <name>hideEffect</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description><![CDATA[When set true, panel is appended as a child of document body.]]></description>
            <name>appendToBody</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description><![CDATA[Client side callback to execute when panel is displayed.]]></description>
            <name>onShow</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description><![CDATA[Client side callback to execute when panel is hidden.]]></description>
            <name>onHide</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description><![CDATA[Position of the panel relative to the target.]]></description>
            <name>my</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description><![CDATA[Position of the target relative to the panel.]]></description>
            <name>at</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description><![CDATA[Dynamic mode allows overlay panel to fetch it's contents before it's shown rather than on page load
            which is useful to reduce initial page load times. Default is false.]]></description>
            <name>dynamic</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description><![CDATA[When set true, clicking outside of the panel hides the overlay.]]></description>
            <name>dismissable</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description><![CDATA[Displays a close icon to hide the overlay, default is false.]]></description>
            <name>showCloseIcon</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
    </tag>
    

    <!-- =======================================================================
    // =========================================================================
    // =========================================================================
    // =========================================================================
    // =========================================================================
    // ===================================================================== -->
    <tag>
        <tag-name>tab</tag-name>
        <description><![CDATA[Tab is a generic container component used by other PrimeFaces components such as tabView or accordionPanel.]]></description>
        <component>
            <component-type>org.ism.component.Tab</component-type>
        </component>
        <attribute>
            <description><![CDATA[Unique identifier of the component in a namingContainer.]]></description>
            <name>id</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        
        <attribute>
            <description><![CDATA[Boolean value to specify the rendering of the component, when set to false component will not be rendered.]]></description>
            <name>rendered</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        
        <attribute>
            <description><![CDATA[An el expression referring to a server side UIComponent instance in a backing bean.]]></description>
            <name>binding</name>
            <required>false</required>
            <type>javax.faces.component.UIComponent</type>
        </attribute>
        <attribute>
            <description><![CDATA[An icon for the current tab.]]></description>
            <name>faIcon</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description><![CDATA[Title text of the tab.]]></description>
            <name>title</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description><![CDATA[Title container inner style.]]></description>
            <name>titleStyle</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description><![CDATA[Title container style class.]]></description>
            <name>titleStyleClass</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description><![CDATA[Disables tab element if true.]]></description>
            <name>disabled</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description><![CDATA[Makes the tab closable by displaying a close icon.]]></description>
            <name>closable</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description><![CDATA[Tooltip of the tab header.]]></description>
            <name>titletip</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description><![CDATA[]]></description>
            <name>ariaLabel</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
    </tag>
    <!-- Converter tags -->

    <!-- Validator tags -->

    <!-- Behavior tags -->


    <!-- Single Tags -->

    <!-- Facelet Tags -->
</facelet-taglib>
